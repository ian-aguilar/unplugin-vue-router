// @ts-nocheck
declare module 'vue-router/auto/routes' {
  import type { RouteRecordRaw } from 'vue-router'
  /**
   * Array of routes generated by unplugin-vue-router
   */
  export const routes: RouteRecordRaw[]
}

declare module 'vue-router/auto' {
  // reexport all types that are not augmented by unplugin-vue-router
  export * from 'vue-router'

  // Augmented types to override the ones exported by vue-router
  export type {
    Router,
    RouteLocationNormalized,
    RouteRecordName,
    RouteLocationNormalizedLoaded,
    RouteLocation,
    RouteLocationAsRelativePath,
    RouteLocationRaw,
    RouteLocationResolved,
    RouteParams,
    RouteParamsRaw,
    NavigationGuard,
    NavigationGuardWithThis,
  } from 'unplugin-vue-router/types'

  export { _defineBasicLoader as defineBasicLoader } from 'unplugin-vue-router/runtime'

  /**
   * unplugin-vue-router version of `RouterOptions`.
   */
  export interface _RouterOptions extends Omit<RouterOptions, 'routes'> {
    /**
     * Modify the routes before they are passed to the router. You can modify the existing array or return a
     * new one.
     *
     * @param routes - The routes generated by this plugin and exposed by `vue-router/auto/routes`
     */
    extendRoutes?: (routes: RouteRecordRaw[]) => RouteRecordRaw[] | void
  }

  export function createRouter(options: _RouterOptions): RouterTyped
}

// NOTE: We could have augmented vue-router stuff here but it doesn't work so we do it in the generated d.ts
