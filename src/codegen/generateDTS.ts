export function generateDTS({
  vueRouterModule,
  routesModule,
  routeNamedMap,
}: {
  vueRouterModule: string
  routesModule: string
  routeNamedMap: string
}) {
  return `
/* eslint-disable */
/* prettier-ignore */
// @ts-nocheck
// Generated by unplugin-vue-router. ‼️ DO NOT MODIFY THIS FILE ‼️
// It's recommended to commit this file.
// Make sure to add this file to your tsconfig.json file as an "includes" or "files" entry.

declare module '${routesModule}' {
  import type {
    RouteRecordInfo,
    ParamValue,
    ParamValueOneOrMore,
    ParamValueZeroOrMore,
    ParamValueZeroOrOne,
  } from 'unplugin-vue-router/types'
  import type { RouteRecordRaw } from 'vue-router'

  /**
   * Array of routes generated by unplugin-vue-router
   */
  export const routes: RouteRecordRaw[]

  /**
   * Route name map generated by unplugin-vue-router
   */
${routeNamedMap
  // remove empty lines and indent by two spaces to match the rest of the file
  .split('\n')
  .filter((line) => line.length !== 0)
  .map((line) => '  ' + line)
  .join('\n')}
}

declare module '${vueRouterModule}' {
  import type { RouteNamedMap } from '${routesModule}'
  import type {
    _RouterTyped,
    _RouterOptions,

    // typed routes helpers
    RouteLocationTypedList,
    RouteLocationResolvedTypedList,
    RouteLocationNormalizedTypedList,
    RouteLocationNormalizedLoadedTypedList,
    RouteLocationAsString,
    RouteLocationAsRelativeTypedList,
    RouteLocationAsPathTypedList,
    NavigationGuardTyped,
    NavigationGuardWithThisTyped,
    RouterLinkPropsTyped,
    RouterLinkTyped,
    UseLinkFnTyped,
  } from 'unplugin-vue-router/types'

  // reexport all types that are not augmented by unplugin-vue-router
  export * from 'vue-router'
  // Augmented types to override the ones exported by vue-router
  export type {
    Router,
    RouteLocationNormalized,
    RouteRecordName,
    RouteLocationNormalizedLoaded,
    RouteLocation,
    RouteLocationAsRelativePath,
    RouteLocationRaw,
    RouteLocationResolved,
    RouteParams,
    RouteParamsRaw,
    NavigationGuard,
    NavigationGuardWithThis,
  } from 'unplugin-vue-router/types'

  /**
   * @deprecated use \`Router\` instead. This type will be a different one in the next major version.
   */
  export type RouterTyped = _RouterTyped<RouteNamedMap>
  export function useRouter(): _RouterTyped<RouteNamedMap>
  export function useRoute<
    Name extends keyof RouteNamedMap = keyof RouteNamedMap
  >(name?: Name): RouteLocationNormalizedLoadedTypedList<RouteNamedMap>[Name]
  export const useLink: UseLinkFnTyped<RouteNamedMap>
  export function onBeforeRouteLeave(guard: NavigationGuardTyped<RouteNamedMap>): void
  export function onBeforeRouteUpdate(guard: NavigationGuardTyped<RouteNamedMap>): void
  export const RouterLink: RouterLinkTyped<RouteNamedMap>
  export const RouterLinkProps: RouterLinkPropsTyped<RouteNamedMap>
  export function createRouter(options: _RouterOptions): _RouterTyped<RouteNamedMap>

  // Experimental Data Fetching
  export {
    _definePage as definePage,
    DataLoaderPlugin,
    _setupLoaderGuard as setupLoaderGuard,
    _defineBasicLoader as defineBasicLoader,
    // FIXME: remove these in next major
    _HasDataLoaderMeta as HasDataLoaderMeta,
    _setupDataFetchingGuard as setupDataFetchingGuard,
    _stopDataFetchingScope as stopDataFetchingScope,
  } from 'unplugin-vue-router/runtime'
}
`.trimStart()
}

/**
 * Generates the DTS that adds types to `TypesConfig` for unplugin-vue-router and vue-router. This file doesn't need to
 * be generated but this way we can generate it for the user instead of letting them copy paste it.
 *
 * @param routesModule - The path to the routes module, e.g. `vue-router/auto/routes`
 */
export function generateTypesConfigDTS(routesModule: string) {
  return `
import type {
  _RouterOptions,
  NavigationGuardTyped,
  NavigationGuardWithThisTyped,
  RouteLocationNormalizedLoadedTypedList,
  _RouterTyped,
  RouterLinkTyped,
} from 'unplugin-vue-router/types'
import type { RouteNamedMap } from '${routesModule}'

declare module 'unplugin-vue-router/types' {
  export interface _TypesConfig {
    RouteNamedMap: RouteNamedMap
  }
}

declare module 'vue-router' {
  export interface TypesConfig {
    beforeRouteEnter: NavigationGuardWithThisTyped<undefined, RouteNamedMap>
    beforeRouteUpdate: NavigationGuardTyped<RouteNamedMap>
    beforeRouteLeave: NavigationGuardTyped<RouteNamedMap>

    $route: RouteLocationNormalizedLoadedTypedList<RouteNamedMap>[keyof RouteNamedMap]
    $router: _RouterTyped<RouteNamedMap>

    RouterLink: RouterLinkTyped<RouteNamedMap>
  }
}
`.trimStart()
}
